name: Deploy to Google Artifact Registry

on:
  push:
    branches:
      - main

# --- CI/CD 環境変数 ---
env:
  GAR_LOCATION: asia-northeast1 # 東京リージョン
  GAR_REPOSITORY: svml # TODO: ご自身のリポジトリ名に変更してください
  IMAGE_NAME: svml-zimu-bot

jobs:
  build-and-push:
    name: Build and Push to GAR
    runs-on: ubuntu-latest

    # Workload Identity Federation を使用してGCPに認証します
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}' # 例: projects/389830447807/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}' # 例: my-service-account@svml-zimu-bot.iam.gserviceaccount.com

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            # GCP_PROJECT_IDシークレットには 'svml-zimu-bot' を設定してください
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.IMAGE_NAME }}' # Cloud Runのサービス名
          region: '${{ env.GAR_LOCATION }}'
          image: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'

      - name: Show Output
        run: echo "Successfully deployed to ${{ steps.deploy.outputs.url }}"